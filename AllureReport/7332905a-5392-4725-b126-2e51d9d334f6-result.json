{"name": "test_page_title_001", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: chrome=123.0.6312.106)\nStacktrace:\n\tGetHandleVerifier [0x00007FF69DFA70C2+63090]\n\t(No symbol) [0x00007FF69DF12D12]\n\t(No symbol) [0x00007FF69DDAEC65]\n\t(No symbol) [0x00007FF69DDAAC1A]\n\t(No symbol) [0x00007FF69DD9D514]\n\t(No symbol) [0x00007FF69DD9E8F8]\n\t(No symbol) [0x00007FF69DD9D7FF]\n\t(No symbol) [0x00007FF69DD9D104]\n\t(No symbol) [0x00007FF69DD9D021]\n\t(No symbol) [0x00007FF69DD9B0A8]\n\t(No symbol) [0x00007FF69DD9B8BC]\n\t(No symbol) [0x00007FF69DDB14AD]\n\t(No symbol) [0x00007FF69DE33D67]\n\t(No symbol) [0x00007FF69DE16FDA]\n\t(No symbol) [0x00007FF69DE33412]\n\t(No symbol) [0x00007FF69DE16D83]\n\t(No symbol) [0x00007FF69DDE83A8]\n\t(No symbol) [0x00007FF69DDE9441]\n\tGetHandleVerifier [0x00007FF69E3A262D+4238301]\n\tGetHandleVerifier [0x00007FF69E3DF78D+4488509]\n\tGetHandleVerifier [0x00007FF69E3D7A6F+4456479]\n\tGetHandleVerifier [0x00007FF69E080606+953270]\n\t(No symbol) [0x00007FF69DF1E5DF]\n\t(No symbol) [0x00007FF69DF192B4]\n\t(No symbol) [0x00007FF69DF193EB]\n\t(No symbol) [0x00007FF69DF09C24]\n\tBaseThreadInitThunk [0x00007FFF7A33257D+29]\n\tRtlUserThreadStart [0x00007FFF7B7AAA58+40]", "trace": "browser = 'chrome'\n\n    @pytest.fixture()\n    def setup(browser):\n    \n        if browser == 'chrome':\n            driver = webdriver.Chrome()\n            print(\"launching Chrome Browser\")\n        elif browser == 'firefox':\n            driver = webdriver.Firefox()\n            print(\"launching Firefox Browser\")\n        elif browser == 'edge':\n            driver = webdriver.Edge()\n            print(\"Launching Edge Browser\")\n        else:\n            print(\"headlessmode\")\n            chrome_options = webdriver.ChromeOptions()\n            chrome_options.add_argument(\"headless\")\n            # driver = webdriver.Chrome(options=chrome_options)\n            driver = webdriver.Chrome()\n    \n        driver.maximize_window()\n        driver.implicitly_wait(10)\n>       driver.get(\"https://automation.credence.in\")\n\ntestCases\\conftest.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021AB3666900>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...07FF69DF09C24]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF7A33257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF7B7AAA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=123.0.6312.106)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF69DFA70C2+63090]\nE       \t(No symbol) [0x00007FF69DF12D12]\nE       \t(No symbol) [0x00007FF69DDAEC65]\nE       \t(No symbol) [0x00007FF69DDAAC1A]\nE       \t(No symbol) [0x00007FF69DD9D514]\nE       \t(No symbol) [0x00007FF69DD9E8F8]\nE       \t(No symbol) [0x00007FF69DD9D7FF]\nE       \t(No symbol) [0x00007FF69DD9D104]\nE       \t(No symbol) [0x00007FF69DD9D021]\nE       \t(No symbol) [0x00007FF69DD9B0A8]\nE       \t(No symbol) [0x00007FF69DD9B8BC]\nE       \t(No symbol) [0x00007FF69DDB14AD]\nE       \t(No symbol) [0x00007FF69DE33D67]\nE       \t(No symbol) [0x00007FF69DE16FDA]\nE       \t(No symbol) [0x00007FF69DE33412]\nE       \t(No symbol) [0x00007FF69DE16D83]\nE       \t(No symbol) [0x00007FF69DDE83A8]\nE       \t(No symbol) [0x00007FF69DDE9441]\nE       \tGetHandleVerifier [0x00007FF69E3A262D+4238301]\nE       \tGetHandleVerifier [0x00007FF69E3DF78D+4488509]\nE       \tGetHandleVerifier [0x00007FF69E3D7A6F+4456479]\nE       \tGetHandleVerifier [0x00007FF69E080606+953270]\nE       \t(No symbol) [0x00007FF69DF1E5DF]\nE       \t(No symbol) [0x00007FF69DF192B4]\nE       \t(No symbol) [0x00007FF69DF193EB]\nE       \t(No symbol) [0x00007FF69DF09C24]\nE       \tBaseThreadInitThunk [0x00007FFF7A33257D+29]\nE       \tRtlUserThreadStart [0x00007FFF7B7AAA58+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "log", "source": "0c70a82b-5982-40ef-b991-43c67cce83df-attachment.txt", "type": "text/plain"}], "start": 1712862805132, "stop": 1712862805132, "uuid": "5be9e928-2b8c-424d-bae8-ede4f51f7195", "historyId": "e6179ff4ff466c5500ea15c762bcff39", "testCaseId": "e6179ff4ff466c5500ea15c762bcff39", "fullName": "testCases.test_login.Test_CredKart_Login#test_page_title_001", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_CredKart_Login"}, {"name": "host", "value": "Nikhil"}, {"name": "thread", "value": "17620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_login"}]}